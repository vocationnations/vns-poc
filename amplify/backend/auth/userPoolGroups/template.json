{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters"              : {
    "authvnspocaf97745dUserPoolId"    : {
      "Type"   : "String",
      "Default": "authvnspocaf97745dUserPoolId"
    },
    "authvnspocaf97745dIdentityPoolId": {
      "Type"   : "String",
      "Default": "authvnspocaf97745dIdentityPoolId"
    },
    "authvnspocaf97745dAppClientID"   : {
      "Type"   : "String",
      "Default": "authvnspocaf97745dAppClientID"
    },
    "authvnspocaf97745dAppClientIDWeb": {
      "Type"   : "String",
      "Default": "authvnspocaf97745dAppClientIDWeb"
    },
    "AuthRoleArn"                     : {
      "Type": "String"
    },
    "UnauthRoleArn"                   : {
      "Type": "String"
    },
    "env"                             : {
      "Type": "String"
    }
  },
  "Conditions"              : {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Resources"               : {
    "vnsmainGroup"        : {
      "Type"      : "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "GroupName" : "vnsmain",
        "Precedence": 1,
        "RoleArn"   : {
          "Fn::GetAtt": [
            "vnsmainGroupRole",
            "Arn"
          ]
        },
        "UserPoolId": {
          "Ref": "authvnspocaf97745dUserPoolId"
        }
      }
    },
    "vnsmainGroupRole"    : {
      "Type"      : "AWS::IAM::Role",
      "Properties": {
        "RoleName"                : {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "authvnspocaf97745dUserPoolId"
              },
              "-vnsmainGroupRole"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version"  : "2012-10-17",
          "Statement": [
            {
              "Sid"      : "",
              "Effect"   : "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action"   : "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals"          : {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "authvnspocaf97745dIdentityPoolId"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              }
            }
          ]
        }
      }
    },
    "LambdaExecutionRole" : {
      "Type"      : "AWS::IAM::Role",
      "Properties": {
        "RoleName"                : {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            {
            },
            {
              "Fn::Join": [
                "",
                [
                  "vnspocaf97745d",
                  "-ExecutionRole-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version"  : "2012-10-17",
          "Statement": [
            {
              "Effect"   : "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action"   : [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies"                : [
          {
            "PolicyName"    : "UserGroupLogPolicy",
            "PolicyDocument": {
              "Version"  : "2012-10-17",
              "Statement": [
                {
                  "Effect"  : "Allow",
                  "Action"  : [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName"    : "UserGroupExecutionPolicy",
            "PolicyDocument": {
              "Version"  : "2012-10-17",
              "Statement": [
                {
                  "Effect"  : "Allow",
                  "Action"  : [
                    "cognito-identity:SetIdentityPoolRoles",
                    "cognito-identity:ListIdentityPools",
                    "cognito-identity:describeIdentityPool"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName"    : "UserGroupPassRolePolicy",
            "PolicyDocument": {
              "Version"  : "2012-10-17",
              "Statement": [
                {
                  "Effect"  : "Allow",
                  "Action"  : [
                    "iam:PassRole"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "RoleMapFunction"     : {
      "Type"      : "AWS::Lambda::Function",
      "DependsOn" : ["LambdaExecutionRole"],
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "const response = require('cfn-response');",
                "const AWS = require('aws-sdk');",
                "exports.handler = (event, context) => {",
                "if (event.RequestType == 'Delete') {",
                "    response.send(event, context, response.SUCCESS, {message: 'Request type delete'})",
                "};",
                "if (event.RequestType == 'Create' || event.RequestType == 'Update') {",
                "    let { identityPoolId, appClientID, appClientIDWeb, userPoolId, region }  = event.ResourceProperties;",
                "    try {",
                "       const cognitoidentity = new AWS.CognitoIdentity();",
                "       let params = {",
                "           IdentityPoolId: identityPoolId,",
                "           Roles: {",
                "               'authenticated': event.ResourceProperties.AuthRoleArn,",
                "               'unauthenticated': event.ResourceProperties.UnauthRoleArn,",
                "           },",
                "           RoleMappings: {}",
                "       };",
                "       if (appClientIDWeb) {",
                "           params.RoleMappings[`cognito-idp.${region}.amazonaws.com/${userPoolId}:${appClientIDWeb}`] = {",
                "               Type: 'Token',",
                "               AmbiguousRoleResolution: 'AuthenticatedRole',",
                "           }",
                "       }",
                "       if (appClientID) {",
                "           params.RoleMappings[`cognito-idp.${region}.amazonaws.com/${userPoolId}:${appClientID}`] = {",
                "               Type: 'Token',",
                "               AmbiguousRoleResolution: 'AuthenticatedRole',",
                "           }",
                "       }",
                "    cognitoidentity.setIdentityPoolRoles(params).promise();",
                "    response.send(event, context, response.SUCCESS, {message: 'Successfully updated identity pool.'})",
                "    } catch(err) {",
                "        response.send(event, context, response.FAILED, {message: 'Error updating identity pool'});",
                "    }",
                "   };",
                "};"
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": "300",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "RoleMapFunctionInput": {
      "Type"      : "Custom::LambdaCallout",
      "Properties": {
        "ServiceToken"  : {
          "Fn::GetAtt": [
            "RoleMapFunction",
            "Arn"
          ]
        },
        "AuthRoleArn"   : {
          "Ref": "AuthRoleArn"
        },
        "UnauthRoleArn" : {
          "Ref": "UnauthRoleArn"
        },
        "identityPoolId": {
          "Ref": "authvnspocaf97745dIdentityPoolId"
        },
        "userPoolId"    : {
          "Ref": "authvnspocaf97745dUserPoolId"
        },
        "appClientIDWeb": {
          "Ref": "authvnspocaf97745dAppClientIDWeb"
        },
        "appClientID"   : {
          "Ref": "authvnspocaf97745dAppClientID"
        },
        "region"        : {
          "Ref": "AWS::Region"
        },
        "env"           : {
          "Ref": "env"
        }
      },
      "DependsOn" : ["RoleMapFunction"]
    }
  },
  "Outputs"                 : {
    "vnsmainGroupRole": {
      "Value": {
        "Fn::GetAtt": [
          "vnsmainGroupRole",
          "Arn"
        ]
      }
    }
  }
}
